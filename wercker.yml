box: kwmt/dockerfile-for-building-android-app

build:
  steps:
    - script:
        name: show base information
        code: |
          ./gradlew -v
          echo $ANDROID_HOME
          echo $ANDROID_SDK_VERSION
          echo $ANDROID_BUILD_TOOLS
          echo $ANDROID_UPDATE_FILTER

    - script:
        name: install git
        code: |
          sudo apt-get update
          sudo apt-get -y install git

    - script:
        name: install golang
        code: |
          wget https://storage.googleapis.com/golang/go1.8.linux-amd64.tar.gz
          sudo tar -xvf go1.8.linux-amd64.tar.gz
          sudo mv go /usr/local
          export GOROOT=/usr/local/go
          export GOPATH=$PWD
          export PATH=$GOPATH/bin:$GOROOT/bin:$PATH
          go version
    - script:
        name: check dependencies library version
        code: |
          go get github.com/kwmt/libver
          libver app/build.gradle
    - script:
        name: fetch google-sercices.json file
        code: |
          wget $GOOGLE_SERVICES_JSON_URL -P app/
#    - script:
#        name: create AVD
#        code: |
#          DEPS="$ANDROID_HOME/installed-dependencies"
#          if [ ! -e $DEPS ]; then echo no | android create avd -n testAVD -f -t android-24 --abi armeabi-v7a && touch $DEPS; fi;
#    - script:
#        name: start AVD
#        code: |
#          emulator -avd testAVD -no-audio -no-window
#    - script:
#        name: run gradle connectedCheck
#        code: |
#          ./gradlew --project-cache-dir=$WERCKER_CACHE_DIR connectedCheck
    - script:
        name: run gradle assembleDevelopDebug
        code: |
          ./gradlew assembleDevelopDebug
    - script:
        name: Ready DeployGate(Install dg command)
        code: |
          curl -sSL https://deploygate.com/cli/install | bash
    - script:
        name: Check dg command version
        code: |
          dg --version
    - script:
        name: dg config
        code: |
          dg config --name $DEPLOYGATE_USER_NAME  --token $DEPLOYGATE_API_TOKEN
    - script:
        name: Upload to DeployGate
        code: |
          dg deploy app/build/outputs/apk/develop/debug/app-develop-debug.apk
  after-steps:
    - raizyr/ultimate-slack-notify@1.0.6:
        webhook_url: $SLACK_URL
        channel: pj-githubviewer

release-build:
  steps:
    - script:
        name: fetch release.keystore file
        code: |
          wget $RELEASE_KEYSTORE_URL
    - script:
        name: run gradle assembleRelease
        code: |
          ./gradlew assembleRelease
    - script:
        name: fetch android-publisher-key.json file
        code: |
          wget $ANDROID_PUBLISEHR_KEY_JSON_URL -P app/
    - script:
        name: run gradle publishProductionRelease
        code: |
          ./gradlew publishProductionRelease
    # TODO: I want to run git on wercker.
#    - script:
#        name: add git tag and push
#        code: |
#          ./gradlew addGitTagAndPush
  after-steps:
    - raizyr/ultimate-slack-notify@1.0.6:
        webhook_url: $SLACK_URL
        channel: pj-githubviewer
        username: Wercker(Release)
