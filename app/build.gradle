apply plugin: 'com.android.application'
apply plugin: 'com.github.triplet.play'

def versionMajor = 0
def versionMinor = 1
def versionPatch = 8
def version = "${versionMajor}.${versionMinor}.${versionPatch}"

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "net.kwmt27.codesearch"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 21
        versionName version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    // https://developer.android.com/guide/platform/j8-jack.html?hl=ja#configuration
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }

    signingConfigs {

        release {
            storeFile rootProject.file("release.keystore")
            storePassword System.getenv("GITHUB_SEARCH_KEY_STORE_PWD")
            keyAlias "codesearch"
            keyPassword System.getenv("GITHUB_SEARCH_KEY_PWD")
        }
    }

    buildTypes {

        // 参考:Build Vriants によって別バージョンの Android アプリを同じプロジェクトからビルドする (Gradle 使用) - ひだまりソケットは壊れない
        // http://vividcode.hatenablog.com/entry/android-app/build-variants
        debug {
            // develop用のパッケージのパッケージ名に接尾辞を付けて、
            // develop用インストール時に本番リリース用のパッケージを上書きしないようにする
            applicationIdSuffix ".develop"
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // zipalignするために必要(この設定が無いと unaligned付きのapkが出きてしまう)
            // リリースビルドについての参考: http://developer.android.com/intl/ja/tools/publishing/app-signing.html#release-mode
            // zipalignについての参考: http://qiita.com/kazuqqfp/items/8eae69e309c6ed75d661
            signingConfig signingConfigs.release
        }
    }

    def githubClientId = System.getenv('GITHUB_CLIENT_ID')
    def githubClientSecret = System.getenv('GITHUB_CLIENT_SECRET')
    def adMobAppId = System.getenv('ADMOB_APP_ID')

    flavorDimensions "default"

    productFlavors {
        develop {
            dimension "default"
            manifestPlaceholders = [appName:"@string/app_name"]
            buildConfigField "String", "BASE_API_URL", "\"https://api.github.com\""
            buildConfigField "String", "BASE_WEBVIEW_URL", "\"https://github.com\""
            buildConfigField "String", "GITHUB_CLIENT_ID", "\"${githubClientId}\""
            buildConfigField "String", "GITHUB_CLIENT_SECRET", "\"${githubClientSecret}\""
        }
        production {
            dimension "default"
            manifestPlaceholders = [appName:"@string/app_name"]
            buildConfigField "String", "BASE_API_URL", "\"https://api.github.com\""
            buildConfigField "String", "BASE_WEBVIEW_URL", "\"https://github.com\""
            buildConfigField "String", "GITHUB_CLIENT_ID", "\"${githubClientId}\""
            buildConfigField "String", "GITHUB_CLIENT_SECRET", "\"${githubClientSecret}\""
        }

    }

}

// https://developer.android.com/topic/libraries/support-library/revisions.html
final SUPPORT_LIB_VERSION = '28.0.0'
// @link https://github.com/square/okhttp
final OKHTTP_VERSION = '3.6.0'
// http://square.github.io/retrofit/
final RETROFIT_VERSION = '2.1.0'
// @link https://github.com/google/dagger
final DAGGER_VERSION = '2.9'
// https://developers.google.com/android/guides/releases
final GOOGLE_PLAY_SERVICES_VERSION = '18.0.2'
final LEAKCANARY_VERSION = '1.4-beta2'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    implementation 'androidx.appcompat:appcompat:1.3.0-beta01'
    implementation 'androidx.recyclerview:recyclerview:1.2.0-beta02'
    implementation 'com.google.android.material:material:1.4.0-alpha01'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android:flexbox:0.2.3'

    // @link https://github.com/google/gson
    implementation 'com.google.code.gson:gson:2.8.0'
    implementation "com.squareup.okhttp3:okhttp:${OKHTTP_VERSION}"
    implementation "com.squareup.okhttp3:logging-interceptor:${OKHTTP_VERSION}"
    // @link https://github.com/ReactiveX/RxJava
//    implementation 'io.reactivex.rxjava2:rxjava:2.0.5'
    implementation 'io.reactivex:rxjava:1.2.6'
    // @link https://github.com/ReactiveX/RxAndroid
//    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex:rxandroid:1.2.1'
// rxjava2にすると、app:transformClassesWithDexForDevelopDebug でエラーが出るので、ちゃんとrxjava2対応する

    implementation "com.squareup.retrofit2:retrofit:${RETROFIT_VERSION}"
    implementation "com.squareup.retrofit2:converter-gson:${RETROFIT_VERSION}"
    implementation "com.squareup.retrofit2:adapter-rxjava:${RETROFIT_VERSION}"
    implementation "com.google.firebase:firebase-core:18.0.0"
    implementation "com.google.firebase:firebase-ads:19.8.0"
    implementation "com.google.firebase:firebase-crash:16.2.1"
    implementation "com.google.firebase:firebase-auth:20.0.3"
    implementation "com.google.firebase:firebase-analytics:18.0.0"

    // Chrome Custom Tabs
    implementation 'androidx.browser:browser:1.3.0'

    // https://github.com/JakeWharton/RxBinding
    implementation 'com.jakewharton.rxbinding:rxbinding-recyclerview-v7:1.0.0'
    // https://github.com/aNNiMON/Lightweight-Stream-API
    implementation 'com.annimon:stream:1.1.5'


    implementation 'com.github.bumptech.glide:glide:3.7.0'

    implementation 'com.roughike:bottom-bar:2.1.1'

    // dagger2
    implementation "com.google.dagger:dagger:${DAGGER_VERSION}"
    annotationProcessor "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'


    androidTestImplementation 'androidx.test:runner:1.4.0-alpha05'
    androidTestImplementation 'androidx.test:rules:1.4.0-alpha05'
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:${OKHTTP_VERSION}"
    // http://stackoverflow.com/a/36835268
    androidTestImplementation 'androidx.annotation:annotation:1.2.0-rc01'

    debugImplementation "com.squareup.leakcanary:leakcanary-android:${LEAKCANARY_VERSION}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${LEAKCANARY_VERSION}"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${LEAKCANARY_VERSION}"
}

play {
    track = 'beta'    // GooglePlayのベータ版へのアップ。製品版は 'production' 、アルファ版は 'alpha'
    serviceAccountEmail = System.getenv("SERVICE_ACCOUNT_EMAIL")
    jsonFile = file('android-publisher-key.json')
}

task addGitTagAndPush {
    doLast {
        def tag = 'v' + version
        "git tag -a ${tag} -m ${tag}".execute()
        "git push origin ${tag}".execute()
    }
}

apply plugin: 'com.google.gms.google-services'
